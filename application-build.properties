# This file is common configuration for all applications that using this config server.

#spring.sleuth.sampler.percentage=1
spring.cloud.stream.bindings.sleuth.destination=atticspace-build-sleuth
spring.cloud.stream.bindings.ATTIC_SPACE_FILE_TRANSFER_REQUEST.destination=ATTIC_SPACE_FILE_TRANSFER_REQUEST_TOPIC_BUILD
spring.cloud.stream.bindings.ATTIC_SPACE_REQUEST_STATUS.destination=ATTIC_SPACE_REQUEST_STATUS_TOPIC_BUILD
spring.cloud.stream.kafka.binder.brokers=kafka-0.kafka-headless.middleware.svc.cluster.local:9092,kafka-1.kafka-headless.middleware.svc.cluster.local:9092,kafka-2.kafka-headless.middleware.svc.cluster.local:9092
spring.cloud.stream.kafka.binder.zkNodes=kafka-zookeeper.middleware.svc.cluster.local:2181
atticspace.lb.dns=a49e8495e36e311e8bfd402b27f426d3-284744515.us-east-2.elb.amazonaws.com
atticspace.lb.port=8080
atticspace.fileupload.svc.uri=/atticspace/fileupload
as.controller.register.user.uri=/as-controller/user
as.controller.get.user.uri=/as-controller/user
as.controller.share.file.uri=/as-controller/share/src-user/{ownerId}/target-user/{targetId}/file/{fileId}

spring.redis.sentinel.master=mymaster
spring.redis.sentinel.nodes=redis-sentinel.paradyme-as-middleware.svc.cluster.local:26379


as.fileupload.svc.source.folder=/var/storePath
as.s3.bucket.name=attic-space-s3-bucket-test

atticspace.controller.host=as-controller.atticspace-test
atticspace.controller.port=8080
atticspace.fileupload.host=as-fileupload-svc.atticspace-test
atticspace.fileupload.port=8080
atticspace.filedownload.host=as-filedownload-svc.atticspace-test
atticspace.filedownload.port=8080




#zipkin.storage.type=mysql
#spring.datasource.schema=classpath:/mysql.sql
#spring.datasource.url=jdbc:mysql://demo-mysql-mysql.middleware.svc.cluster.local:3306/zipkinBuild?createDatabaseIfNotExist=true
#spring.datasource.username=root
#spring.datasource.password=password
#spring.datasource.initialize=true
#spring.datasource.continue-on-error=true

eureka.client.serviceUrl.defaultZone=http://eureka-build-svc.attic-space-dev.svc.cluster.local:8761/eureka
eureka.instance.preferIpAddress=true
eureka.instance.leaseRenewalIntervalInSeconds=10
eureka.instance.health-check-url-path=/actuator/health
eureka.client.registryFetchIntervalSeconds=5
management.security.enabled=false
management.endpoints.web.exposure.include=*
management.endpoint.hystrix.stream.enabled=true
spring.boot.admin.client.instance.prefer-ip=true
spring.boot.admin.client.url=http://ms-admin-build-svc.attic-space-dev.svc.cluster.local:8080

spring.boot.admin.client.auto-deregistration=true

hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=60000
ribbon.ConnectTimeout=30000
ribbon.ReadTimeout=60000


spring.kafka.producer.bootstrap-servers=kafka-0.kafka-headless.middleware.svc.cluster.local:9092,kafka-1.kafka-headless.middleware.svc.cluster.local:9092,kafka-2.kafka-headless.middleware.svc.cluster.local:9092
spring.zipkin.baseUrl: http://jaeger-test-collector.attic-space-test.svc.cluster.local:9411/
#spring.zipkin.kafka.topic=atticspace-build-sleuth
#spring.zipkin.sender.type=kafka
spring.sleuth.sampler.probability=1
spring.data.mongodb.uri=mongodb://demo-mg-mongodb-replicaset-0.demo-mg-mongodb-replicaset.middleware.svc.cluster.local:27017,demo-mg-mongodb-replicaset-1.demo-mg-mongodb-replicaset.middleware.svc.cluster.local:27017,demo-mg-mongodb-replicaset-2.demo-mg-mongodb-replicaset.middleware.svc.cluster.local:27017/trace-monitor-build



spring.cloud.bus.destination=CLOUD_BUS_BUILD
spring.application.index=${random.uuid}
spring.cloud.gateway.discovery.locator.enabled=true


